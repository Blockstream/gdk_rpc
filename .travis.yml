language: generic
sudo: required
services:
  - docker

env:
  global:
    - DOCKERBUILDER=blockstream/gdk_rpc
    - DOCKERHASH=e0ca2d21faa0cc1a932d8b4d771da7118f73346391cbb2cd797ea14d16e08aff
    - GDK_LOCATION=/gdk
    - GDK_TARGET=build-clang
  matrix:
    - UNUSED=true

matrix:
  include:
    # fmt checks and release build
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && source /root/.cargo/env && cargo fmt --all -- --check && ./build_deps.sh && cargo check --all && cargo clippy --all && cargo build --all --release"

    # unit tests
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && ./build_deps.sh && ./test.sh"
    # NDK check
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && ./ndk.sh armeabi-v7a"
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && ./ndk.sh arm64-v8a"
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && ./ndk.sh x86_64"
    - script:
        - docker run -v $PWD:/gdk_rpc $DOCKERBUILDER@sha256:$DOCKERHASH /bin/bash -c "cd /gdk_rpc && ./ndk.sh x86"

